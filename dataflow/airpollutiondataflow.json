{
	"name": "airpollutiondataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json5",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          coord as (lon as double, lat as double),",
				"          list as (main as (aqi as integer), components as (co as integer, no as double, no2 as double, o3 as double, so2 as double, pm2_5 as double, pm10 as double, nh3 as double), dt as integer)[]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine') ~> source1",
				"source1 foldDown(unroll(list),",
				"     mapColumn(",
				"          main = list.main,",
				"          components = list.components,",
				"          dt = list.dt,",
				"          aqi = list.main.aqi",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 derive(location = \"Boston\",",
				"          timestamp = iif(length(toString(dt)) > 10, toInteger(null()), toInteger(dt)),",
				"          co = round(toFloat(byName('list.components.co')), 2),",
				"          no = round(toFloat(byName('list.components.no')), 2),",
				"          no2 = round(toFloat(byName('list.components.no2')), 2),",
				"          o3 = round(toFloat(byName('list.components.o3')), 2),",
				"          so2 = round(toFloat(byName('list.components.so2')), 2),",
				"          pm2_5 = round(toFloat(byName('list.components.pm2_5')), 2),",
				"          pm10 = round(toFloat(byName('list.components.pm10')), 2),",
				"          nh3 = round(toFloat(byName('list.components.nh3')), 2)) ~> derivedColumn1",
				"derivedColumn2 select(mapColumn(",
				"          main,",
				"          components,",
				"          location,",
				"          corrected_timestamp = timestamp",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"derivedColumn1 filter(!isNull(aqi) && !isNull(timestamp)) ~> filter1",
				"filter1 derive(date_time = toTimestamp(toLong(timestamp) * 1000),",
				"          id = location + '_' + toString(timestamp)) ~> derivedColumn2",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}